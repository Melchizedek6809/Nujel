(:arity-error (try car (macroexpand '(return 1 2 3))))
(:arity-error (try car (macroexpand '(if 1 2 3 4))))
(:arity-error (try car (macroexpand '(def 1 2 3))))
(8 (constant-fold (macroexpand '(+ 1 1 (* 2 3)))))
(21 (compile/for :none '(+ 1 2 3 4 5 6)))
(4 (compile/for :none '(do 1 2 3 4)))
(:type-error (try car (bytecompile '(def #nil #nil))))
(:type-error (try car (bytecompile '(set! #nil #nil))))
(:type-error (try car (bytecompile '(def))))
(:arity-error (try car (bytecompile '(set!))))
