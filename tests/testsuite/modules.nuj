(4040398435 (require :image) (image/adler32 (image/test-image-xor)))

(3149043687
  (require :image/bmp)
  (import hash :crypto/adler32)
  (import (test-image-xor) :image)
  (hash (image/bmp/encode (test-image-xor))))

(2716273128 (require :compiler/c-asset-packer) (import (hash) :crypto/adler32) (hash (compiler/c-asset-packer/create-string-asset "asd" "test")))
(29 (require :compiler/c-asset-packer) (:length (compiler/c-asset-packer/create-string-asset "asd" "test")))
(40 (require :compiler/c-asset-packer) (:length (compiler/c-asset-packer/create-string-asset "j32093f3223f" "secret")))
(535759991 (require :compiler/c-asset-packer) (import (hash) :crypto/adler32) (hash (compiler/c-asset-packer/create-string-asset "j32093f3223f" "secret")))

(#t (require :array/2d) (-> (array/2d/allocate 4 4) (array/2d/set! 1 1 #t) (array/2d/ref 1 1)))
(#t (require :array/2d) (-> (array/2d/allocate 3 3) (array/2d/fill! #t) (array/2d/ref 1 1)))

("\e[0;33mabc\e[0m" (require :ansi) (ansi/wrap 3 "abc"))
("\e[0;30m123\e[0m" (require :ansi) (ansi/black "123"))
("\e[0;31m123\e[0m" (require :ansi) (ansi/dark-red "123"))
("\e[0;32m123\e[0m" (require :ansi) (ansi/dark-green "123"))
("\e[0;33m123\e[0m" (require :ansi) (ansi/brown "123"))
("\e[0;34m123\e[0m" (require :ansi) (ansi/dark-blue "123"))
("\e[0;35m123\e[0m" (require :ansi) (ansi/purple "123"))
("\e[0;36m123\e[0m" (require :ansi) (ansi/teal "123"))
("\e[0;37m123\e[0m" (require :ansi) (ansi/dark-gray "123"))
("\e[1;30m123\e[0m" (require :ansi) (ansi/gray "123"))
("\e[1;31m123\e[0m" (require :ansi) (ansi/red "123"))
("\e[1;32m123\e[0m" (require :ansi) (ansi/green "123"))
("\e[1;33m123\e[0m" (require :ansi) (ansi/yellow "123"))
("\e[1;34m123\e[0m" (require :ansi) (ansi/blue "123"))
("\e[1;35m123\e[0m" (require :ansi) (ansi/pink "123"))
("\e[1;36m123\e[0m" (require :ansi) (ansi/cyan "123"))
("\e[1;37m123\e[0m" (require :ansi) (ansi/white "123"))
("\e[1;31mt\e[1;32me\e[1;33ms\e[1;34mt\e[1;35me\e[1;36mr\e[1;37ml\e[0;37me\e[0;39m" (require :ansi)  (ansi/rainbow "testerle"))
("\e[0;36m\e[41mt\e[0;35m\e[42me\e[0;34m\e[43ms\e[0;33m\e[44mt\e[0;32m\e[45me\e[0;31m\e[46mr\e[0;30m\e[47ml\e[0;37m\e[40me\e[0m" (require :ansi) (ansi/rainbow-bg "testerle"))

("00620062" (require :crypto/adler32) (fmt "{:08X}" (crypto/adler32/hash "a")))
("0F9D02BC" (require :crypto/adler32) (fmt "{:08X}" (crypto/adler32/hash "asdQWE123")))
("796B110D" (require :crypto/adler32) (fmt "{:08X}" (crypto/adler32/hash "DiesIstEinTestDerNujelAdler32Implementierung")))

("C1D04330" (require :crypto/crc32c) (fmt "{:08X}" (crypto/crc32c/hash "a")))
("5185664B" (require :crypto/crc32c) (fmt "{:08X}" (crypto/crc32c/hash "Test")))
("4D551068" (require :crypto/crc32c) (fmt "{:08X}" (crypto/crc32c/hash "Hello, World!")))

("E8B7BE43" (require :crypto/crc32) (fmt "{:08X}" (crypto/crc32/hash "a")))
("784DD132" (require :crypto/crc32) (fmt "{:08X}" (crypto/crc32/hash "Test")))
("EC4AC3D0" (require :crypto/crc32) (fmt "{:08X}" (crypto/crc32/hash "Hello, World!")))

("d41d8cd98f00b204e9800998ecf8427e" (require :crypto/md5) (crypto/md5/hash ""))
("0cc175b9c0f1b6a831c399e269772661" (require :crypto/md5) (crypto/md5/hash "a"))
("900150983cd24fb0d6963f7d28e17f72" (require :crypto/md5) (crypto/md5/hash "abc"))
("f96b697d7cb7938d525a2f31aaf161d0" (require :crypto/md5) (crypto/md5/hash "message digest"))
("c3fcd3d76192e4007dfb496cca67e13b" (require :crypto/md5) (crypto/md5/hash "abcdefghijklmnopqrstuvwxyz"))
("d174ab98d277d9f5a5611c2c9f419d9f" (require :crypto/md5) (crypto/md5/hash "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"))
("57edf4a22be3c955ac49da2e2107b67a" (require :crypto/md5) (crypto/md5/hash "12345678901234567890123456789012345678901234567890123456789012345678901234567890"))
("9e107d9d372bb6826bd81d3542a419d6" (require :crypto/md5) (crypto/md5/hash "The quick brown fox jumps over the lazy dog"))
("cb4794d9a70d922a9eafd5b82d14d560" (require :crypto/md5) (crypto/md5/hash (-> (range 2048) (map :string) (join ", "))))
